<html>
<head>
<title>3d transforms</title>

<style>
body {
    overflow: hidden;
}

#container {
    border: thin #aaa solid;
    height: 380px;
    width: 380px;
    float: right;
    margin-right: 6em;
}

#display {
    padding: 20px;
    background-size: cover;
    border-radius: 0.5em;
    opacity: 0.9;
    height: 340px;
    width: 340px;
    background-image: url(img/gal5.png);
}

fieldset {
    margin-bottom: 1em;
    font-size: smaller;
    font-family: sans-serif;
}

form {
    border: #aaa thin solid;
    background: #fff;
    border-radius: 0.5em;
    padding: 0.5em;
}

pre {
    max-width: 70%;
    color: #fff;
    background: #777;
    padding: 1em;
    margin: 1em;
    margin-bottom: 3em;
    border-radius: 1em;
}

#control_display {
    width: 48%;
    display: inline-block;
}

section {
    display: inline-block;
    min-width: 540px;
    min-height: 540px;
}

h4 {
    font-family: sans-serif;
    text-align: center;
    margin: 0;
}

.controls {
    float: right;
    min-width: 240px;
}

</style>

<link rel="apple-touch-icon-precomposed" href="img/html5x128.png" />
<link rel="apple-touch-icon" href="img/html5x128.png" />

<meta name="apple-mobile-web-app-capable" content="yes">
</head>
<body>

<section class="controls">
<form>

<div>

<input type="reset" value="Start Over">
<br/>
<label>perspective</label>
<input id="cont_perspective" type="range" min="0" max="4000" value="2000"/>0-4000
</div>

<fieldset>
<legend>rotate3D</legend>
<label>&deg;</label>
<input id="p_rotate_angle" type="range" min="-360" max="360" value="0"/>&plusmn; 360&deg;
<br/><label>x</label>
<input id="p_rotate_x" type="range" min="-1" max="1" step="0.01" value="0"/>&plusmn; 1
<br/><label>y</label>
<input id="p_rotate_y" type="range" min="-1" max="1" step="0.01" value="0"/>&plusmn; 1
<br/><label>z</label>
<input id="p_rotate_z" type="range" min="-1" max="1" step="0.01" value="0"/>&plusmn; 1
</fieldset>

<fieldset>
<legend>translate3D</legend>
<label>x</label>
<input id="p_translate_x" type="range" min="-300" max="300" value="0"/>&plusmn; 300px
<br/><label>y</label>
<input id="p_translate_y" type="range" min="-300" max="300" value="0"/>&plusmn; 300px
<br/><label>z</label>
<input id="p_translate_z" type="range" min="-300" max="300" value="0"/>&plusmn; 300px
</fieldset>

<fieldset>
<legend>scale3D</legend>
<label>x</label>
<input id="p_scale_x" type="range" min="0" max="2" step="0.1" value="1"/>0-2
<br/><label>y</label>
<input id="p_scale_y" type="range" min="0" max="2" step="0.1" value="1"/>0-2
<br/><label>z</label>
<input id="p_scale_z" type="range" min="0" max="2" step="0.1" value="1"/>0-2
</fieldset>

<fieldset>
<legend>origin</legend>
<label>x</label>
<input id="p_origin_x" type="range" min="-200" max="200" value="50"/>&plusmn;200%
<br/><label>y</label>
<input id="p_origin_y" type="range" min="-200" max="200" value="50"/>&plusmn;200%
<br/><label>z</label>
<input id="p_origin_z" type="range" min="-200" max="200" value="0"/>&plusmn;200px
</fieldset>

<fieldset>
<legend>backface</legend>
<select id="p_backface">
<option selected>visible</option>
<option>hidden</option>
</select>
</fieldset>

</form>

</section>


<pre>
.container { -webkit-perspective: <span id="containerPerspective"></span> }
.display {
  -webkit-backface-visibility: <span id="displayVis"></span>;
  -webkit-transform-origin: <span id="displayOrigin"></span>;
  -webkit-transform: <span id="displayTransform"></span>;
  -webkit-transform: <span id="matrix"></span>;
}
</pre>

  <div id="container">
  <div id="display"></div>
  </div>

<script>

var app = new Function();

app.test3D = function() {
    var err = "Sorry, your browser does not support 3D transforms. Try Apple Safari or Nokia Browser 8.5.";
    var supports_3d;
    var query = '(-webkit-transform-3d)';
    if (!!window.matchMedia) {
        supports_3d = window.matchMedia(query).matches;
    }
    else if (!!window.styleMedia && !!window.styleMedia.matchMedium) {
        supports_3d = window.styleMedia.matchMedium(query);
    }
    else if (!!window.media && !!window.media.matchMedium) {
        supports_3d = window.media.matchMedium(query);
    }
    if (! supports_3d ) alert(err);
}

window.onload = function() {
    document.querySelector('input[type=reset]').addEventListener('click', function( ) { window.location.reload() } );
    app.inputs = document.querySelectorAll('select, input:not([type=reset])');
    for (var i = 0, l = app.inputs.length ; i < l ; i++) {
        app.inputs[i].addEventListener('change', app.modify);
    }
    app.display = document.querySelector('#display');
    app.container = document.querySelector('#container');
    app.mx = document.querySelector('#matrix');

    app.init();
    app.test3D();

};

app.init = function() {
    app.initStyles();
    app.render();
    app.showMatrix();
};

app.initStyles = function() {
    for (var i = 0, l = app.inputs.length ; i < l ; i++) {
        app[app.inputs[i].id] = app.inputs[i].value;
    }
};

app.showCode = function(id, str) {
    document.getElementById(id).innerHTML = str;
}

app.modify = function(event) {
    app[event.target.id] = app.trimArtifact(event.target.value);
    app.render();
    app.showMatrix();
}

app.trimArtifact = function(n) {
    if (n.match(/^[0-9.-]+$/)) {
        return(Math.floor(n * 100) / 100);
    }
    else {
        return(n);
    }
}

app.render = function() {

    var pOr = '';
    var pVis = '';
    var pTr = '';
    var pStyle = '';
    var cont = '';

    // translate
    pTr += 'translate3D(';
    pTr += app.p_translate_x + 'px, ';
    pTr += app.p_translate_y + 'px, ';
    pTr += app.p_translate_z + 'px) ';


    // scale
    pTr += 'scale3D(';
    pTr += app.p_scale_x + ', ';
    pTr += app.p_scale_y + ', ';
    pTr += app.p_scale_z + ') ';


    // rotate
    pTr += "\n        rotate3D(";
    pTr += app.p_rotate_x + ', ';
    pTr += app.p_rotate_y + ', ';
    pTr += app.p_rotate_z + ', ';
    pTr += app.p_rotate_angle + 'deg)';


    // origin
    pOr += app.p_origin_x + '% ';
    pOr += app.p_origin_y + '% ';
    pOr += app.p_origin_z + 'px';


    // visibility
    pVis += app.p_backface;

    // container perspective
    cont += app.cont_perspective;

    // mop up
    app.display.style.webkitTransform = pTr;
    app.display.style.webkitTransformOrigin = pOr;
    app.display.style.webkitBackfaceVisibility = pVis;
    app.display.style.webkitTransformStyle = pStyle;
    app.container.style.webkitPerspective = cont;

    app.showCode('displayTransform', pTr);
    app.showCode('displayOrigin', pOr);
    app.showCode('displayVis', pVis);
    app.showCode('containerPerspective', cont);

};

app.showMatrix = function() {
    var prop = window.getComputedStyle(app.display, null).getPropertyValue("-webkit-transform");
    prop = prop.replace(/(\.[0-9][0-9][0-9])[0-9]+/g, "$1");
    app.mx.innerHTML = prop;
};

</script>

</body>
</html>
